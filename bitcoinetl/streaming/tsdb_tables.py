from sqlalchemy.sql import func

from sqlalchemy import (
    Table,
    Column,
    Integer,
    Date,
    DateTime,
    BigInteger,
    String,
    Numeric,
    MetaData,
    Boolean,
    TIMESTAMP,
)

metadata = MetaData()

BLOCKS = Table(
    "blocks",
    metadata,
    Column("block_timestamp", TIMESTAMP, primary_key=True),
    Column("_st", Integer),
    Column("_st_day", Date),
    Column("blknum", BigInteger),
    Column("blkhash", String),
    Column("tx_count", Integer),
    Column("blk_size", BigInteger),
    Column("stripped_size", BigInteger),
    Column("weight", BigInteger),
    Column("version", BigInteger),
    Column("nonce", String),
    Column("bits", String),
    Column("difficulty", Numeric(38)),
    Column("coinbase_param", String),
    Column("item_id", String, primary_key=True),
    Column("created_at", DateTime, server_default=func.current_timestamp()),
    Column("updated_at", DateTime, server_default=func.current_timestamp()),
)

TRANSACTIONS = Table(
    "txs",
    metadata,
    Column("block_timestamp", TIMESTAMP, primary_key=True),
    Column("_st", Integer),
    Column("_st_day", Date),
    Column("blknum", BigInteger),
    Column("txhash", String),
    Column("txpos", Integer),
    Column("is_coinbase", Boolean),
    Column("input_count", Integer),
    Column("input_value", BigInteger),
    Column("output_count", Integer),
    Column("output_value", BigInteger),
    Column("size", BigInteger),
    Column("vsize", BigInteger),
    Column("weight", BigInteger),
    Column("version", BigInteger),
    Column("locktime", BigInteger),
    Column("hex", String),
    Column("item_id", String, primary_key=True),
    Column("created_at", DateTime, server_default=func.current_timestamp()),
    Column("updated_at", DateTime, server_default=func.current_timestamp()),
)

TRACES = Table(
    "traces",
    metadata,
    Column("block_timestamp", TIMESTAMP, primary_key=True),
    Column("_st", Integer),
    Column("_st_day", Date),
    Column("blknum", BigInteger),
    Column("txhash", String),
    Column("txpos", Integer),
    Column("is_coinbase", Boolean),
    Column("is_in", Boolean),
    Column("pxhash", String),
    Column("tx_in_value", BigInteger),
    Column("tx_out_value", BigInteger),
    Column("vin_seq", BigInteger),
    Column("vin_idx", BigInteger),
    Column("vin_cnt", BigInteger),
    Column("vin_type", String),
    Column("vout_idx", BigInteger),
    Column("vout_cnt", BigInteger),
    Column("vout_type", String),
    Column("address", String),
    Column("value", BigInteger),
    Column("script_hex", String),
    Column("script_asm", String),
    Column("req_sigs", BigInteger),
    Column("txinwitness", String),
    Column("item_id", String, primary_key=True),
    Column("created_at", DateTime, server_default=func.current_timestamp()),
    Column("updated_at", DateTime, server_default=func.current_timestamp()),
)
